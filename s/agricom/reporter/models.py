from django.db import models
from django.contrib.gis.db import models
# Create your models here.

class Incidences(models.Model):
    name = models.CharField(max_length=256)
    location = models.PointField(srid=4326)
    #picture = models.ImageField()
    objects = models.Manager()


    def __unicode__(self):
        return self.name
    
    class Meta:
        verbose_name_plural = "Incidences"


class Counties(models.Model):
    scalerank = models.IntegerField()
    natscale = models.IntegerField()
    labelrank = models.IntegerField()
    featurecla = models.CharField(max_length=50)
    name = models.CharField(max_length=100)
    namepar = models.CharField(max_length=254)
    namealt = models.CharField(max_length=254)
    diffascii = models.IntegerField()
    nameascii = models.CharField(max_length=100)
    adm0cap = models.FloatField()
    capin = models.CharField(max_length=15)
    worldcity = models.FloatField()
    megacity = models.IntegerField()
    sov0name = models.CharField(max_length=100)
    sov_a3 = models.CharField(max_length=3)
    adm0name = models.CharField(max_length=50)
    adm0_a3 = models.CharField(max_length=3)
    adm1name = models.CharField(max_length=50)
    iso_a2 = models.CharField(max_length=5)
    note = models.CharField(max_length=254)
    latitude = models.FloatField()
    longitude = models.FloatField()
    changed = models.FloatField()
    namediff = models.IntegerField()
    diffnote = models.CharField(max_length=254)
    pop_max = models.IntegerField()
    pop_min = models.IntegerField()
    pop_other = models.IntegerField()
    rank_max = models.IntegerField()
    rank_min = models.IntegerField()
    geonameid = models.FloatField()
    meganame = models.CharField(max_length=50)
    ls_name = models.CharField(max_length=41)
    ls_match = models.IntegerField()
    checkme = models.IntegerField()
    max_pop10 = models.FloatField()
    max_pop20 = models.FloatField()
    max_pop50 = models.FloatField()
    max_pop300 = models.FloatField()
    max_pop310 = models.FloatField()
    max_natsca = models.FloatField()
    min_areakm = models.FloatField()
    max_areakm = models.FloatField()
    min_areami = models.FloatField()
    max_areami = models.FloatField()
    min_perkm = models.FloatField()
    max_perkm = models.FloatField()
    min_permi = models.FloatField()
    max_permi = models.FloatField()
    min_bbxmin = models.FloatField()
    max_bbxmin = models.FloatField()
    min_bbxmax = models.FloatField()
    max_bbxmax = models.FloatField()
    min_bbymin = models.FloatField()
    max_bbymin = models.FloatField()
    min_bbymax = models.FloatField()
    max_bbymax = models.FloatField()
    mean_bbxc = models.FloatField()
    mean_bbyc = models.FloatField()
    compare = models.IntegerField()
    gn_ascii = models.CharField(max_length=254)
    feature_cl = models.CharField(max_length=254)
    feature_co = models.CharField(max_length=254)
    admin1_cod = models.FloatField()
    gn_pop = models.FloatField()
    elevation = models.FloatField()
    gtopo30 = models.FloatField()
    timezone = models.CharField(max_length=254)
    geonamesno = models.CharField(max_length=100)
    un_fid = models.IntegerField()
    un_adm0 = models.CharField(max_length=254)
    un_lat = models.FloatField()
    un_long = models.FloatField()
    pop1950 = models.FloatField()
    pop1955 = models.FloatField()
    pop1960 = models.FloatField()
    pop1965 = models.FloatField()
    pop1970 = models.FloatField()
    pop1975 = models.FloatField()
    pop1980 = models.FloatField()
    pop1985 = models.FloatField()
    pop1990 = models.FloatField()
    pop1995 = models.FloatField()
    pop2000 = models.FloatField()
    pop2005 = models.FloatField()
    pop2010 = models.FloatField()
    pop2015 = models.FloatField()
    pop2020 = models.FloatField()
    pop2025 = models.FloatField()
    pop2050 = models.FloatField()
    cityalt = models.CharField(max_length=50)
    min_zoom = models.FloatField()
    wikidataid = models.CharField(max_length=30)
    wof_id = models.BigIntegerField()
    capalt = models.IntegerField()
    name_en = models.CharField(max_length=254)
    name_de = models.CharField(max_length=254)
    name_es = models.CharField(max_length=254)
    name_fr = models.CharField(max_length=254)
    name_pt = models.CharField(max_length=254)
    name_ru = models.CharField(max_length=254)
    name_zh = models.CharField(max_length=254)
    geom = models.MultiPointField(srid=4326)

    def __unicode__(self):
        return self.adm1name





    